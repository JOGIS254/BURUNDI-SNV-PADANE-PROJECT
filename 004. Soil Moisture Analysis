/////////////////////////////////
////2021-2023 soil moisture////
////////////////////////////////

///////////////////////////////////
///////By James //////////////////
/////////////////////////////////

//                                                  
// Code: Soil Moisture For Burundi - Provinces
// Written by: James Waichoka-Geo-Environmental Planner and Analyst
// Objective:  Soil Moisture Analysis for Burundi PADANE SNV Project 2024

//=====================================================================================================================

////////////////////////////////////////////////////////////////////////////////////////////////
//step 1: We can choose the specific province that we want to carry out our soil analysis for:/
//////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////
////Enter the province name here:001. Gitega 2024//
//////////////////////////////////////////////////

// 1: Import the Feature Collection with all the provinces
var provinces = ee.FeatureCollection("projects/ee-omayojames7/assets/Burundi_Admin_1_Provinces");

// 2: Filter the Feature Collection by 'admin1Name'
var roi = provinces.filter(ee.Filter.eq('admin1Name', 'Gitega'));

// 3: Add the selected province to the map
Map.centerObject(roi, 10);
Map.addLayer(roi,{}, 'Gitega Province');

// 4: Print the selected province to the console
print('selected province :', roi);

//step 2: Load satellite data
var landsat = ee.ImageCollection("LANDSAT/LC08/C02/T1_L2")
      .filterBounds(roi)
      .filterDate('2021','2024')
      .filter(ee.Filter.lt('CLOUD_COVER',5));
    
    
//step 3: Calculate the LST and NDVI
var parameters = landsat.map(function(img)
{
  var ms = img.select('SR_B.*').multiply(0.0000275).add(-0.2);
  var ndvi = ms.normalizedDifference ([
    'SR_B5','SR_B4']).rename('ndvi');
  var lst = img.select('ST_B10').multiply(0.00341802).add(149)
  .rename('lst');
  return ee.Image.cat(ndvi,lst)
  .copyProperties(img, img.propertyNames());
});

//step 4: Calculate the full LST cover
var lst_full_cover = parameters.map(function(img)
{
 var ndvi_full =  img.select ('ndvi').gt(0.3);
 var lst_full = img.select('lst').updateMask(ndvi_full);
 return lst_full
 .copyProperties(img, img.propertyNames());
});

//step 5: Calculating LST Bareland
var  lst_bareland = parameters.map(function(img)

{
  var ndvi_bareland = img.select('ndvi').gte(0).and (img.select('ndvi')
  .lt(0.2));
  var lst_bareland =img.select('lst').updateMask(ndvi_bareland);
  return lst_bareland
  .copyProperties(img, img.propertyNames());
});

//step 6: Calculate LST for wet vegetation (vw) for the TOTRAM Model
 var vw =ee.Number(lst_full_cover.min()
    .reduceRegion
    ({
      reducer: ee.Reducer.min(), geometry:
  roi,scale: 100
    }).values().get(0));

//step 7: calculate LST for dry vegetation (vd) for the maximum value in TROTRAM Model
var vd = ee.Number(lst_full_cover.max()
    .reduceRegion
    ({
      reducer: ee.Reducer.max(), geometry:
  roi, scale: 100
    }).values().get(0));

//step 8: calculate the wet land lst (iw) in TOTRAM Model
var iw = ee.Number(lst_bareland.min ()
.reduceRegion
 ({
   reducer: ee.Reducer.min(),geometry:
   roi,scale:100
 }).values().get(0));
 
//step 9: calculate the dry land lst (id) in TOTRAM Model
var id = ee.Number(lst_bareland.max ()
.reduceRegion
 ({
   reducer: ee.Reducer.max(),geometry:
   roi,scale:100
 }).values().get(0));
 
//step 10: subtratcion between dry land (id) and dry vegetation (vd)
var sd = id.subtract(vd);

// step 11: subtratcion between wet land (iw) and wet vegetation (vw)
var sw = iw.subtract(vw);

//step 12:Making of soil moisture modelling
var sm = parameters.map(function(img){
  var eq = img.expression(
    '(id + sd * ndvi - lst)/(id - iw +(sd-sw)*ndvi)',{'id':id,'sd':sd,'ndvi':img.select('ndvi'),'lst':img.select('lst'),'iw':iw, 'sw':sw}).rename('soil moisture');
    return eq
    .copyProperties(img, img.propertyNames())
    });
    
//step 13: Alt 1: visualization
//Create a chart for monthly
var chart = ui.Chart.image.series({
  imageCollection:sm,
  region: roi,
  reducer: ee.Reducer.max(),
  scale: 100
}).setOptions({
  lineWidth: 2,
  pointSize: 2.5,
  title: 'Soil Moisture at Gitega Province',
  vAxis: {title: 'Soil Moisture (mm)'},
  hAxis: {title: 'Month',gridlines:{count:24}}
})

print(chart)



//step 14: lets add map to the canvas to see how soil moisture is distributed
var clipped_sm = sm.max().clip(roi);
Map.addLayer(clipped_sm,{min:0, max:1, palette:['violet','brown','yellow','purple']},'soil moisture for Gitega (2021-2024)')
